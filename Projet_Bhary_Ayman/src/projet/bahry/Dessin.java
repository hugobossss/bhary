/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projet.bahry;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author adahbi
 */
public class Dessin extends javax.swing.JFrame {
//    private BufferedImage buffer;
    private Graphics2D contexteBuffer;
    private Graphics2D contexteBufferMap;
   
    // Constantes pour Tile Mapping
    private static int TILE_WIDTH = 32;
    private static int TILE_HEIGHT = 32;

    private static int TILES_PER_ROW = 16;
    private static int TILES_PER_COL = 16;
    

    /**
     * Creates new form Dessin
     */
    public Dessin() {
        initComponents();
        
        // Affichage de l'avatar
        BufferedImage buffer = new BufferedImage(this.avatar.getWidth(), this.avatar.getHeight(),BufferedImage.TYPE_INT_ARGB);
        avatar.setIcon(new ImageIcon(buffer));
        this.contexteBuffer=buffer.createGraphics();
        
        // Affichage de TileMapping
        BufferedImage bufferMap = new BufferedImage(this.jLabel3.getWidth(), this.jLabel3.getHeight(),BufferedImage.TYPE_INT_ARGB);
        jLabel3.setIcon(new ImageIcon(bufferMap));
        this.contexteBufferMap=bufferMap.createGraphics();
        
//        avatar.setLocation(250, 100);
        this.repaint();
    }

    public void paint(Graphics g) {
        super.paint(g);
        
        BufferedImage tileSet = null;
        try {
            tileSet = ImageIO.read(new File("tileSetMinecraft32x32.png"));
        } catch (IOException ex) {
            Logger.getLogger(Dessin.class.getName()).log(Level.SEVERE, null, ex);
        }
          int map[][] ={ {0, 0, 0,   0,  0, 0,  0, 0,  0,  0,  0, 0},   // dessin d'une carte
                         {0, 0, 26, 26, 26, 0,  0, 0,  0,  0,  0, 0},
                         {0, 0, 26, 20, 26, 0,  0, 0,  0,  0,  0, 0},
                         {0, 0, 26, 20, 26, 0,  0, 0,  0,  0, 57, 2},
                         {0, 0,  0, 20,  0, 0,  0, 0,  0,  1,  2, 3},
                         {2, 2,  0, 20,  0, 0, 57, 0, 18, 18,  1, 1},
                         {3, 3,  2,  2,  2, 2,  2, 2,  1,  1,  1, 1},
                         {3, 3,  3,  3,  3, 3,  3, 3,  1,  1,  1, 1},
                         {1, 1,  3,  3,  3, 3,  3, 1,  1,  16,  1,1},
                       
        };
        
//         FenetreGraphique contexteBufferMap = new FenetreGraphique("Hello World!", 40 * TILE_WIDTH, 20 * TILE_HEIGHT);//peut etre non
//         contexteBufferMap.effacer(new Color(175, 226, 255));//peut etre non
        

//        Graphics2D contexte = contexteBufferMap.getGraphics2D();// changer la fenetre par le jlabell (affecter au label)
     for (int y=0; y<map.length; y++){       // une boucle qui permet de créer un tableau de (un nombre) de tuiles contenant des tuiles different... et qui genere des tuiles....
         for(int x =0;x<map[y].length;x++){
        
        int tileNumber = map[y][x];
        int tileX = (tileNumber % TILES_PER_ROW) * TILE_WIDTH;
        int tileY = (tileNumber / TILES_PER_ROW) * TILE_HEIGHT;
        BufferedImage tile = tileSet.getSubimage(tileX, tileY, TILE_WIDTH, TILE_HEIGHT);// subimag: on prend juste une partie du tile;

    
        contexteBufferMap.drawImage(tile, x*32, y*32, null); //on multiple x et y (les coordonnées de tile) par*32 pour les convertir du coordonnées vers des pixels
         }
     }
     System.out.println("tilemap");
        
//        contexte.drawImage(tile, 130, 130, null);
//        contexte.drawImage(tile, 200, 200, null);
       
  
        //this.repaint();
        System.out.println("ok");
        this.repaint();
        this.jPanel1.repaint();
//        this.jLabel3.repaint();
//       avatar.repaint();
          
        }  

//        this.repaint();
//        this.jPanel1.repaint();
//      avatar.repaint();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        avatar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Choisir mon avatar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 240, 240));
        jPanel1.setLayout(null);

        avatar.setText("avatar");
        jPanel1.add(avatar);
        avatar.setBounds(31, 32, 70, 70);

        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 6, 840, 430);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(131, 131, 131)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 614, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addContainerGap(141, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(404, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       String cad;
        JFileChooser choixFichier = new JFileChooser(".");
       int bouton = choixFichier.showOpenDialog(null);
       if(bouton ==JFileChooser.APPROVE_OPTION){
           System.out.println("Fichier à lire : " + choixFichier.getSelectedFile());
//           this.avatar.repaint();
           cad= choixFichier.getCurrentDirectory() + "/" +choixFichier.getSelectedFile().getName();
//            jLabel2.setText(cad);
            avatar.setIcon(new ImageIcon(cad));
           
       }
     
    
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dessin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dessin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dessin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dessin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dessin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}

